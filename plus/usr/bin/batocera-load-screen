#!/bin/bash
##
## Batocera.PLUS
## Alexandre Freire dos Santos
##
## Este script exibe uma imagem de carregamento em tela cheia.
##

################################################################################

readonly DEFAULT_IMAGE='/usr/share/batocera/splash/logo-version.png'
readonly THEME=/tmp/yad.theme
readonly MAX_TIME=120

################################################################################

##
## MAIN
##
function main()
{
    local CLOSE='--close-on-unfocus'
    local IMAGE="${DEFAULT_IMAGE}"
    local TIMEOUT=${MAX_TIME}

    for i in $(seq ${#}); do
        case "${1}" in
            -n)
                CLOSE=$(getClose "${1}")
                if [ "${CLOSE}" == 'error' ]; then
                    help
                    return 1
                fi
                ;;
            -i)
                shift
                IMAGE="$(getImage "${1}")"
                if [ -z "${IMAGE}" ]; then
                    help
                   return 2
                fi
                ;;
            -t)
                shift
                TIMEOUT="$(getTimeOut "${1}")"
                if [ -z "${TIMEOUT}" ]; then
                    help
                    return 3
                fi
                ;;
            --help)
                    help
                    return 4
                ;;
        esac
        shift
    done

    local RESOLUTION="$(getResolution)"
    if [ -z "${RESOLUTION}" ]; then
        return 5
    fi

    showImage "${RESOLUTION}" "${IMAGE}" "${CLOSE}" "${TIMEOUT}"

    return 0
}

################################################################################

##
## Help
##
function help()
{
    echo
    echo "Usage: $(basename ${0}) [-n] [-t seconds] [-i image]"
    echo
    echo 'Shows full screen image while the game is loading.'
    echo
    echo '    -n    The window does not close if focus is lost'
    echo '    -t    Time in seconds for the loading screen to close automatically'
    echo '    -i    Path to the image'
    echo
    echo 'Example:'
    echo
    echo "$(basename ${0}) -n -t 4 -i /userdata/screenshots/My_Image.png"
    echo
    echo 'If an image is not defined a standard image will be shown.'
    echo
}

################################################################################

##
## Verifica se a tela de carregamento deve ser fechada chando o foco da janela for perdido.
## Teste de sanidade.
##
function getClose()
{
    local CLOSE=${1}

    if [ "${CLOSE}" == '-n' ]; then
        return 0
    fi

    if [ -z "${CLOSE}" ]; then
        echo '--close-on-unfocus'
        return 0
    fi

    echo 'error'
    return 1
}

################################################################################

##
## Retorna o tempo máximo para exibir a tela de carregamento.
## Teste de sanidade.
##
function getTimeOut()
{
    local TIME=${1}

    # Tempo padrão.
    if [ -z "${TIME}" ]; then
        echo "${MAX_TIME}"
        return 0
    fi

    # Verifica se o tempo é um valor numérico (is numeric).
    if let ${TIME}+0 2> /dev/null; then
        echo "${TIME}"
        return 0
    fi

    return 1
}

################################################################################

##
## Retorna o local da imagem a ser exibida.
## Teste de sanidade.
##
function getImage()
{
    IMAGE="${1}"

    # Use default image.
    if [ -z "${IMAGE}" ]; then
        echo "${DEFAULT_IMAGE}"
        return
    fi

    # Show help.
    if [ "${IMAGE}" == '--help' ]; then
        return
    fi

    if [ ! -f "${IMAGE}" ]; then
        return
    fi

    # Use a custom image.
    echo "${IMAGE}"
}

################################################################################

##
## Retorna a resolução da área de trabalho acrescentando 4 pixels.
##
function getResolution() {
    local RESOLUTION=$(batocera-resolution currentResolution)
    local RESOLUTION_X=$(echo ${RESOLUTION} | cut -d x -f 1)
    local RESOLUTION_Y=$(echo ${RESOLUTION} | cut -d x -f 2)

    # Add 4 pixels in resolution.
    RESOLUTION_X=$((${RESOLUTION_X} + 4))
    RESOLUTION_Y=$((${RESOLUTION_Y} + 4))

    # Minimum resolution 640x480
    if [ "${RESOLUTION_X}" -lt '640' ]; then
        return -1
    fi
    if [ "${RESOLUTION_Y}" -lt '480' ]; then
        return -2
    fi

    echo "${RESOLUTION_X}x${RESOLUTION_Y}"
}

################################################################################

##
## Exibe a imagem de carregamento.
##
function showImage()
{
    local RESOLUTION=${1}
    local IMAGE="${2}"
    local CLOSE="${3}"
    local TIMEOUT="${4}"

    # Make a black theme
    cat << '    EOF' > "${THEME}"
        style "default-style"
        {
            bg[NORMAL] = "#000000"
            fg[NORMAL] = "#000000"
        }
        class "GtkWidget" style "default-style"
    EOF

    # Show image
    GTK2_RC_FILES="${THEME}" yad \
        --title batocera-load-screen \
        --geometry=${RESOLUTION} \
        --borders=0 \
        --undecorated \
        --no-buttons \
        --vscroll-policy=never \
        --hscroll-policy=never \
        --on-top \
        "${CLOSE}" \
        --no-escape \
        --timeout=${TIMEOUT} \
        --picture \
            --size=fit \
            --filename="${IMAGE}"

    rm "${THEME}"
}

################################################################################

main "${@}" && exit ${?}
