#!/bin/sh

# hide mouse cursor
unclutter --noevents -b

systemsetting="batocera-settings"

# set the keyboard
settings_lang="$(${systemsetting} -command load -key system.language)"
settings_kblayout="$(${systemsetting} -command load -key system.kblayout)"

if [ "${settings_kblayout}" == '' ]; then
    if [ "$(echo "${settings_lang}" | grep '_')" ]; then
        map_name=$(echo ${settings_lang,,} | cut -c 4-5)
    else
        map_name=$(echo ${settings_lang} | cut -c 1-2)
    fi
else
    map_name="${settings_kblayout}"
fi
setxkbmap "${map_name}"

# disable dpms to prevent screen from blanking
xset -dpms
xset s off

# environment
export HOME=/userdata/system
export LC_ALL="${settings_lang}.UTF-8"
export LANG=${LC_ALL}

# because of xinerama breaking es, enable only one screen at a time
settings_output="`$systemsetting -command load -key global.videooutput`"
batocera-resolution setOutput "${settings_output}" # empty or invalid values defaults to the first valid

# dpi override for nvidia gpus
settings_output="`$systemsetting -command load -key global.dpi`"
[ ! -z "${settings_output}" ] && batocera-resolution setDPI "${settings_output}"

#####################
## CUSTOMISATIONS ###
# to customize your display, you can copy this file to ~/.xinitrc and then modify it

# rotate the screen
# xrandr -o left
# xrandr -o right
# xrandr -o inverted

### Resolution VGA 4x3
#xrandr -r 60 -s 160x120
#xrandr -r 60 -s 360x640
#xrandr -r 60 -s 640x480
#xrandr -r 60 -s 720x480
#xrandr -r 60 -s 800x600
#xrandr -r 60 -s 1024x768

### ResolutionHD 16x9
#xrandr -r 60 -s 1280x720
#xrandr -r 60 -s 1920x1080

### Resolution OUTRAS 16x9
#xrandr -r 60 -s 1152x864
#xrandr -r 60 -s 1280x800
#xrandr -r 60 -s 1440x900
#xrandr -r 60 -s 1600x900

#####################
#####################

################################################################################

### Hybrid Nvidia

if grep -q ' BusID ' /usr/share/X11/xorg.conf.d/10-nvidia-drm-outputclass.conf; then
    xrandr --setprovideroutputsource modesetting NVIDIA-0
    xrandr --auto
fi

################################################################################

### Forces resolution

# set user desired resolution
# nice workaround for displays which tell X11 to use strange resolutions
if [ "$(grep ^global.videomode /boot/batocera-boot.conf)" ]; then
    settings_output="$(grep ^global.videomode /boot/batocera-boot.conf | cut -d '=' -f 2)"
else
    settings_output="$($systemsetting -command load -key global.videomode)"
fi

[ ! -z "${settings_output}" ] && batocera-resolution setMode "${settings_output}"

batocera-resolution minTomaxResolution

################################################################################

### Force vsync

xset -dpms
xset s off

################################################################################

### Resolve o bug, de não carregar os arquivos de configuração da pasta
### /etc/triggerhappy/triggers.d para ativar os atalhos de teclado.

/etc/init.d/K50triggerhappy start &

################################################################################

### Vídeo de abertura

function getRandVideo() {
    local VIDEO_DIR='/userdata/splashvideos'
    local TOTAL_FILES='0'
    local VIDEO_FILE=''

    for i in "$VIDEO_DIR/"*; do
        if [ "${i%mp4}mp4" == "$i" ]; then
            TOTAL_FILES="$(($TOTAL_FILES + 1))"
        fi
    done

    local RAND_NUM="$(($RANDOM % $TOTAL_FILES))"
    local COUNT='0'

    for i in "$VIDEO_DIR/"*; do
        if [ "${i%mp4}mp4" == "$i" ]; then
            if [ $COUNT == $RAND_NUM ]; then
                VIDEO_FILE="$i"
                break
            else
                COUNT="$(($COUNT + 1))"
            fi
        fi
    done

    echo "${VIDEO_FILE}"
}

function getVideoFile()
{
    if [ "$(ls -A -1 /userdata/splashvideos/*.mp4 | head -n 1)" ]; then
        echo "$(getRandVideo)"
    else
        echo '/usr/share/batocera/splash/splash.mp4'
    fi
}

function playVideo() {
    openbox &
    xjoypad -display $DISPLAY -device /dev/input/js0 -buttons 39 39 39 39 39 39 39 39 39 39 39 39 39 &
    cvlc --fullscreen --play-and-exit --no-interact --no-osd "$(getVideoFile)" 2> /dev/null
    killall xjoypad
    openbox --exit
}

if [ "$(grep ^splash.video=true /boot/batocera-boot.conf)" ]; then
    playVideo "${VIDEO_FILE}"
fi

################################################################################

### Imagem de carregamento alternativa.

# Observação1:
# Neste código eu esqueci que o o kodi pode iniciar automáticamente.
# Este é um exemplo de código que pode resolver o problema a ser implatado
# while [[ ! -f "/tmp/emulationstation.ready" && ! -e "/var/run/kodi.msg" && $count -lt 200 ]]; do

if [ -f "$HOME/configs/emulationstation/es_settings.cfg" ]; then
    THEME_NAME="$(cat "$HOME/configs/emulationstation/es_settings.cfg" | grep '<string name="ThemeSet" value=' | cut -d '"' -f 4)"
    if ! [ "$THEME_NAME" ]; then
        THEME_NAME='batocera-plus'
    fi
else
    THEME_NAME='batocera-plus'
fi

if [ -d "$HOME/themes/$THEME_NAME" ]; then
    THEME_DIR="$HOME/themes/$THEME_NAME"
elif [ -d "/etc/emulationstation/themes/$THEME_NAME" ]; then
    THEME_DIR="/etc/emulationstation/themes/$THEME_NAME"
else
    THEME_DIR='/etc/emulationstation/themes/batocera-plus'
fi

if [ -f "$THEME_DIR/loadscreen/startscreen.png" ]; then
    START_SCREEN="$THEME_DIR/loadscreen/startscreen.png"
elif [ -f "$THEME_DIR/loadscreen/startscreen.jpg" ]; then
    START_SCREEN="$THEME_DIR/loadscreen/startscreen.jpg"
elif [ "/etc/emulationstation/themes/batocera-plus/loadscreen/startscreen.png" ]; then
    START_SCREEN='/etc/emulationstation/themes/batocera-plus/loadscreen/startscreen.png'
elif [ "/etc/emulationstation/themes/batocera-plus/loadscreen/startscreen.jpg" ]; then
    START_SCREEN='/etc/emulationstation/themes/batocera-plus/loadscreen/startscreen.jpg'
fi

# Interrompe a tela de carregamento quando o emulationstation estiver pronto para uso.
(
    for i in {1..300}; do
        if [ "$(pidof emulationstation)" ]; then
            sleep 1
            batocera-load-screen -n -t 300 -i "${START_SCREEN}" &
            break
        fi
        sleep 0.2
    done

    sleep 4

    for i in {1..300}; do
        if [ -f '/tmp/emulationstation.ready' ]; then
            if [ "$(pidof yad)" ]; then
                killall yad
            fi
            break
        fi
        sleep 0.5
    done
) &

################################################################################

### Start Emulationstation.

# allow coredumps for ES
ulimit -H -c unlimited
ulimit -S -c unlimited emulationstation

# dbus launch is required for the gio/gvfs/trash:///...
eval `dbus-launch --sh-syntax --exit-with-session`

cd /userdata # es needs a PWD
openbox --config-file /etc/openbox/rc.xml --startup 'emulationstation --windowed --no-splash'
