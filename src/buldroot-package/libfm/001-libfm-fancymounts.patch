diff --git a/src/gtk/fm-places-model.c b/src/gtk/fm-places-model.c
index 104f988..730bf98 100644
--- a/src/gtk/fm-places-model.c
+++ b/src/gtk/fm-places-model.c
@@ -56,7 +56,16 @@ typedef enum
     FM_PLACES_ID_APPLICATIONS,
     FM_PLACES_ID_COMPUTER,
     FM_PLACES_ID_NETWORK,
-    FM_PLACES_ID_OTHER
+    FM_PLACES_ID_OTHER,
+    FM_PLACES_ID_BATOCERA_SHARE,
+    FM_PLACES_ID_BATOCERA_ROMS,
+    FM_PLACES_ID_BATOCERA_BIOS,
+    FM_PLACES_ID_BATOCERA_SAVES,
+    FM_PLACES_ID_BATOCERA_THEMES,
+    FM_PLACES_ID_BATOCERA_MUSIC,
+    FM_PLACES_ID_BATOCERA_WINE,
+    FM_PLACES_ID_BATOCERA_DOWNLOADS,
+    FM_PLACES_ID_BATOCERA_SCREENSHOTS
 } FmPlacesOrder;
 
 struct _FmPlacesItem
@@ -895,7 +904,7 @@ static void create_trash_item(FmPlacesModel* model)
     g_object_unref(gf);
 
     new_path_item(GTK_LIST_STORE(model), &it, fm_path_get_trash(),
-                  FM_PLACES_ID_TRASH, _("Trash Can"), "user-trash", NULL);
+                  FM_PLACES_ID_TRASH, _("Trash"), "user-trash", NULL);
     trash_path = gtk_tree_model_get_path(GTK_TREE_MODEL(model), &it);
     model->trash = gtk_tree_row_reference_new(GTK_TREE_MODEL(model), trash_path);
     gtk_tree_path_free(trash_path);
@@ -988,11 +997,65 @@ static void fm_places_model_init(FmPlacesModel *self)
     self->eject_icon = fm_pixbuf_from_icon(icon, fm_config->pane_icon_size);
     g_object_unref(icon);
 
-    if(fm_config->places_home)
+//    if(fm_config->places_home)
+//    {
+//        path = fm_path_get_home();
+//        new_path_item(model, &it, path, FM_PLACES_ID_HOME,
+//                      _("Home Folder"), "user-home", job);
+//    }
+
     {
-        path = fm_path_get_home();
-        new_path_item(model, &it, path, FM_PLACES_ID_HOME,
-                      _("Home Folder"), "user-home", job);
+      path = fm_path_new_for_str("/userdata");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_SHARE,
+		    _("Share"), "share", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/roms");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_ROMS,
+		    _("Roms"), "roms", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/bios");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_BIOS,
+		    _("Bios"), "bios", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/saves");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_SAVES,
+		    _("Saves"), "saves", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/themes");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_THEMES,
+		    _("Themes"), "themes", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/music");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_MUSIC,
+		    _("Music"), "music", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/system/configs/wine");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_WINE,
+		    _("Wine"), "wine", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/downloads");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_DOWNLOADS,
+		    _("Downloads"), "downloads", job);
+    }
+
+    {
+      path = fm_path_new_for_str("/userdata/screenshots");
+      new_path_item(model, &it, path, FM_PLACES_ID_BATOCERA_SCREENSHOTS,
+		    _("Screenshots"), "screenshots", job);
     }
 
     /* Only show desktop in side pane when the user has a desktop dir. */
@@ -1056,17 +1119,18 @@ static void fm_places_model_init(FmPlacesModel *self)
 
     /* add volumes to side-pane */
     /* respect fm_config->places_unmounted */
-    if (fm_config->places_unmounted)
-    {
-        vols = g_volume_monitor_get_volumes(self->vol_mon);
-        for(l=vols;l;l=l->next)
-        {
-            GVolume* vol = G_VOLUME(l->data);
-            add_volume_or_mount(self, G_OBJECT(vol), job);
-            g_object_unref(vol);
-        }
-        g_list_free(vols);
-    }
+
+//    if (fm_config->places_unmounted)
+//    {
+//        vols = g_volume_monitor_get_volumes(self->vol_mon);
+//        for(l=vols;l;l=l->next)
+//        {
+//            GVolume* vol = G_VOLUME(l->data);
+//            add_volume_or_mount(self, G_OBJECT(vol), job);
+//            g_object_unref(vol);
+//        }
+//        g_list_free(vols);
+//    }
 
     /* add mounts to side-pane */
     vols = g_volume_monitor_get_mounts(self->vol_mon);
